{
  "analyticsCode": "",
  "pageLayout": "two-column",
  "basics": {
    "name": "Austin Githinji",
    "label": "Senior Full Stack Developer",
    "image": "/passport.jpg",
    "email": "devaustingithinji@gmail.com",
    "url": "githinji.dev",
    "summary": "A results-oriented Software Developer with over two years of experience in application and web development.  With a dedicated interest in cybersecurity, I proactively research security vulnerabilities to build more robust and secure software.    My goal is to leverage my skills in a role where I can contribute to creating secure, high-quality digital solutions",
    "theme": "red",
    "location": {
      "address": "Nairobi County",
      "city": "Nairobi",
      "countryCode": "KE",
      "region": "Kenya"
    },
    "profiles": [
      {
        "network": "GitHub",
        "icon": "ri:github-fill",
        "username": "acridsoul",
        "url": "https://github.com/acridsoul"
      },
      {
        "network": "LinkedIn",
        "icon": "ri:linkedin-fill",
        "username": "your-linkedin-username",
        "url": "https://www.linkedin.com/in/your-linkedin-username/"
      },
      {
        "network": "Credly",
        "icon": "simple-icons:credly",
        "username": "your-credly-username",
        "url": "https://www.credly.com/users/your-credly-username"
      }
    ],
    "beian": {
      "mint": "赣ICP备2021005460号-1",
      "police": "赣公网安备 36010302000349号"
    }
  },
  "education": [
    {
      "institution": "Mount Kenya University",
      "area": "Bachelor of Science in Information Technology",
      "studyType": "Full-time student",
      "startDate": "",
      "endDate": "2026-08-01",
      "summary": "Expected Graduation August 2026"
    }
  ],
  "certificates": [
    {
      "name": "Cisco Ethical Hacker Certificate",
      "date": "2025-01-01",
      "issuer": "Cyber Shujaa"
    },
    {
      "name": "Web Security Certificate",
      "date": "2025-01-01",
      "issuer": "Linux Foundation"
    }
  ],
  "work": [
    {
      "name": "A.C.K. St. Stephen’s Church, Gatuanyaga",
      "position": "IT Consultant",
      "location_type": "Onsite",
      "location": "Gatuanyaga, Kenya",
      "startDate": "2022-12-01",
      "endDate": null,
      "summary": "Designed and implemented the core IT infrastructure for all pastoral and administrative activities.",
      "highlights": [
        "Engineered and managed the church’s audio-visual systems, successfully integrating multiple screens for live services and events.",
        "Developed and launched the official church website; integrated the Daraja API to enable M-Pesa STK push payments for offerings, streamlining the donation process.",
        "Built a cross-platform liturgy application using Flutter, providing church services in multiple languages to enhance accessibility for the congregation."
      ]
    },
    {
      "name": "TenantMate (Academic Project)",
      "position": "Co-developer",
      "location_type": "Academic",
      "location": "",
      "startDate": "2025-01-01",
      "endDate": "2025-04-30",
      "summary": "Co-developed with a team of four students to design and build a Mobile App in Flutter, focusing on the Real Estate sector, with key aspects such as Maintenance Ticketing and Rent Payment Analytics."
    }
  ],
  "skills": [
    {
      "name": "HTML",
      "icon": "simple-icons:html5",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Frontend"
      ]
    },
    {
      "name": "CSS",
      "icon": "ri:css3-fill",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Frontend",
        "Responsive Design"
      ]
    },
    {
      "name": "JavaScript",
      "icon": "simple-icons:javascript",
      "level": "Expert",
      "keywords": [
        "Web Development",
        "Frontend",
        "Backend",
        "Fullstack"
      ]
    },
    {
      "name": "Tailwind",
      "icon": "mdi:tailwind",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Frontend",
        "CSS Framework",
        "Responsive Design"
      ]
    },
    {
      "name": "TypeScript",
      "icon": "simple-icons:typescript",
      "level": "Expert",
      "keywords": [
        "Web Development",
        "Frontend",
        "Backend",
        "JavaScript Superset"
      ]
    },
    {
      "name": "Node",
      "icon": "ri:nodejs-line",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Backend",
        "JavaScript",
        "Server"
      ]
    },
    {
      "name": "SQL",
      "icon": "simple-icons:mysql",
      "level": "Intermediate",
      "keywords": [
        "Databases",
        "SQL",
        "Data Storage",
        "Backend"
      ]
    },
    {
      "name": "MongoDB",
      "icon": "simple-icons:mongodb",
      "level": "Intermediate",
      "keywords": [
        "Databases",
        "File",
        "Data Storage",
        "Backend"
      ]
    },
    {
      "name": "Git",
      "icon": "mdi:git",
      "level": "Intermediate",
      "keywords": [
        "Version Control",
        "Collaboration",
        "Source Code"
      ]
    },
    {
      "name": "GitHub",
      "icon": "mdi:github",
      "level": "Expert",
      "keywords": [
        "Version Control",
        "Collaboration",
        "Source Code",
        "Git"
      ]
    },
    {
      "name": "Next.js",
      "icon": "ri:nextjs-line",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Frontend",
        "React Framework",
        "SSR",
        "Static Generation"
      ]
    },
    {
      "name": "React",
      "icon": "mdi:react",
      "level": "Expert",
      "keywords": [
        "Web Development",
        "Frontend",
        "JavaScript Library",
        "UI"
      ]
    },
    {
      "name": "Vue",
      "icon": "mdi:vuejs",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Frontend",
        "JavaScript Library",
        "UI"
      ]
    },
    {
      "name": "Docker",
      "icon": "mdi:docker",
      "level": "Intermediate",
      "keywords": [
        "Virtual Environments",
        "Backend"
      ]
    },
    {
      "name": "Astro",
      "icon": "simple-icons:astro",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Frontend",
        "SSR",
        "Static Generation"
      ]
    },
    {
      "name": "PHP",
      "icon": "simple-icons:php",
      "level": "Intermediate",
      "keywords": [
        "Web Development",
        "Backend",
        "Fullstack"
      ]
    },
    {
      "name": "Linux",
      "icon": "simple-icons:linux",
      "level": "Intermediate",
      "keywords": [
        "OS",
        "Scripting",
        "Automation"
      ]
    }
  ],
  "languages": [
    {
      "language": "Chinese",
      "fluency": "Native speaker"
    },
    {
      "language": "English",
      "fluency": "Intermediate"
    }
  ],
  "interests": [
    {
      "name": "Technology",
      "keywords": [
        "AI",
        "Blockchain"
      ]
    }
  ],
  "references": [
    {
      "name": "MiraHikari",
      "reference": "Reference…"
    }
  ],
  "projects": [
    {
      "name": "Autofill Buddy",
      "github": "https://github.com/acridsoul/Autofill-Buddy",
      "description": "Programmed a Python script to automate the filling of registration forms with realistic, generated user data for testing purposes."
    },
    {
      "name": "Clear Mark",
      "github": "https://github.com/acridsoul/Clear-Mark",
      "description": "Created a browser extension for Chrome and Firefox that enhances the viewing experience on documentary-area.com by providing high-quality video streams. Achieved community recognition with multiple stars on GitHub, demonstrating project value and user satisfaction."
    },
    {
      "name": "LLM-Search",
      "github": "https://github.com/acridsoul/llm-search",
      "description": "Developed a browser extension that integrates a search bar into the user interfaces of popular AI chat providers. Enabled users on free tiers to search past conversations, a feature previously exclusive to paid subscribers, improving workflow and reference capabilities."
    }
  ],
  "labChallenges": [
    {
      "title": "Studocu.com Document Access Vulnerability",
      "platform": "Studocu.com",
      "githubUrl": "https://github.com/danieltyukov/studocuhack",
      "problem": "Studocu.com restricts access to premium documents using overlays, CSS blurring, and download prevention. However, a vulnerability allows users to bypass these restrictions and download premium content without authentication or payment. The 'Studocuhack' browser extension demonstrates how these client-side controls can be circumvented, exposing premium documents to unauthorized access.",
      "approach": "The extension exploits weaknesses in the client-side implementation by removing premium banners and overlays, unblurring document pages, monitoring the DOM in real-time to remove dynamically loaded restrictions, and injecting a button to generate a print-friendly, downloadable version of the document.",
      "tools": ["JavaScript DOM APIs", "MutationObserver", "CSS injection", "Browser Extension APIs"],
      "codeSamples": [
        {"description": "Remove Premium Banners", "code": "const premiumBanner = document.querySelector('[class*=\"PremiumBannerBlobWrapper_preview-banner\"]');\nif (premiumBanner) premiumBanner.remove();"},
        {"description": "Unblur Document Pages", "code": "document.querySelectorAll('.page-content').forEach(page => {\n    page.style.filter = 'none';\n});"},
        {"description": "Real-Time DOM Monitoring", "code": "const observer = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    mutation.addedNodes.forEach((node) => {\n      if (node.nodeType === Node.ELEMENT_NODE && node.matches('[class*=\"PremiumBannerBlobWrapper\"]')) {\n        setTimeout(removePremiumBanner, 100);\n      }\n    });\n  });\n});\nobserver.observe(document.body, { childList: true, subtree: true });"},
        {"description": "Enable Document Download", "code": "function createDownloadButton() {\n    let downloadBtn = document.createElement(\"button\");\n    downloadBtn.addEventListener('click', generatePDF);\n    return downloadBtn;\n}"}
      ],
      "lessons": [
        "Client-side controls are insufficient for protecting premium content. Any content delivered to the browser can be accessed by users, regardless of UI restrictions.",
        "Robust server-side access control is essential to prevent unauthorized access and downloading of premium documents.",
        "Security through obscurity (e.g., overlays, CSS blurring) does not provide real protection against determined attackers with basic web development knowledge."
      ]
    },
    {
      "title": "Web Security Challenges (CTF Walkthrough)",
      "platform": "pwn.college challenges",
      "problem": "A series of escalating web security challenges covering path traversal, command injection, authentication logic flaws, and multiple forms of SQL injection.",
      "approach": "Solved each level by identifying and exploiting vulnerabilities, using a combination of manual testing, code review, and automation scripts. Each level required a different attack vector and demonstrated a unique security lesson.",
      "tools": [
        "curl",
        "Python requests library",
        "Source code review",
        "Knowledge of SQL and SQLite",
        "Automation scripts"
      ],
      "levels": [
        {
          "level": 1,
          "title": "Path Traversal",
          "problem": "Bypass file access restrictions to read sensitive files on the server using path traversal.",
          "approach": "Manipulated the URL path and used the 'path' argument to access /etc/passwd and /flag.",
          "exampleExploit": [
            "curl http://challenge.localhost:80?path=/../../../etc/passwd --path-as-is -i",
            "curl http://challenge.localhost:80?path=/../../../flag --path-as-is -i"
          ],
          "lessons": [
            "Path traversal vulnerabilities can be exploited by manipulating URL parameters.",
            "Servers may leak information about required parameters in error messages.",
            "Always validate and sanitize user input on the server side."
          ]
        },
        {
          "level": 2,
          "title": "Command Injection",
          "problem": "Exploit a command injection vulnerability to execute arbitrary commands and retrieve the flag.",
          "approach": "Injected shell commands using ; to chain commands via the timezone parameter.",
          "exampleExploit": [
            "curl --path-as-is \"http://challenge.localhost:80?timezone=whoami;id;\"",
            "Python requests: url = 'http://challenge.localhost:80?timezone=who;cat /flag;'"
          ],
          "lessons": [
            "Unsanitized input passed to shell commands can lead to command injection.",
            "Error messages and stack traces can reveal how input is processed.",
            "Always use parameterized APIs or proper input validation when invoking system commands."
          ]
        },
        {
          "level": 3,
          "title": "Authentication Logic Flaw",
          "problem": "Bypass authentication to access the flag by exploiting logic flaws in user ID handling.",
          "approach": "Analyzed the source code and accessed the endpoint directly with ?user=1.",
          "exampleExploit": [
            "curl http://challenge.localhost:80?user=1"
          ],
          "lessons": [
            "User IDs in URLs can be manipulated to access other users’ data.",
            "Never trust user-supplied identifiers without proper authorization checks."
          ]
        },
        {
          "level": 4,
          "title": "SQL Injection (Login Bypass)",
          "problem": "Exploit SQL injection in the login form to bypass authentication and access the flag.",
          "approach": "Used payloads like flag\" -- and \" or 1=1-- to bypass password checks.",
          "exampleExploit": [
            "Python requests: username=\" or 1=1--, password=admin",
            "Python requests: username=flag\" --, password=admin"
          ],
          "lessons": [
            "String interpolation in SQL queries is highly dangerous.",
            "Always use parameterized queries to prevent SQL injection."
          ]
        },
        {
          "level": 5,
          "title": "SQL Injection (Data Extraction)",
          "problem": "Extract sensitive data from the database using SQL injection in a search parameter.",
          "approach": "Exploited the LIKE clause and used UNION SELECT to extract the flag.",
          "exampleExploit": [
            "Python requests: query=f% (enumerate users)",
            "Python requests: query=\" UNION SELECT password FROM users -- (extract flag)"
          ],
          "lessons": [
            "Even seemingly harmless search features can be vulnerable to SQL injection.",
            "UNION-based SQL injection can be used to extract arbitrary data."
          ]
        },
        {
          "level": 6,
          "title": "SQL Injection with Unknown Table Name",
          "problem": "Extract the flag from a table with an unknown, dynamically generated name.",
          "approach": "Enumerated table names via sqlite_master, then extracted the flag from the discovered table.",
          "exampleExploit": [
            "Python requests: query=\" UNION SELECT tbl_name FROM sqlite_master -- (discover table)",
            "Python requests: query=\" UNION SELECT password FROM table6108655952227085405 ; -- (extract flag)"
          ],
          "lessons": [
            "SQL injection can be used to enumerate database schema.",
            "Understanding the underlying database system helps in crafting effective attacks."
          ]
        },
        {
          "level": 7,
          "title": "Blind SQL Injection",
          "problem": "Extract the flag using blind SQL injection, where no direct error or data is returned.",
          "approach": "Tested for password characters one by one using LIKE and GLOB, automated with a Python script.",
          "exampleExploit": [
            "Python requests: username=flag \" OR password  LIKE \"p%\" -- -",
            "Automated brute-force with Python and string module"
          ],
          "lessons": [
            "Blind SQL injection requires creative use of application responses to infer data.",
            "Automating attacks can save significant time in blind scenarios.",
            "GLOB can be used for case-sensitive matching in SQLite."
          ]
        }
      ]
    }
  ]
}
